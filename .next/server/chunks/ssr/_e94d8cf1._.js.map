{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevindunbar/Desktop/Design%20Club/Clients/Flint/Lead%20Magnet/flint-prod/hooks/use-debounce.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n} "],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,YAAe,KAAQ,EAAE,KAAa;IACpD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAK;IAExD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,WAAW;YACzB,kBAAkB;QACpB,GAAG;QAEH,OAAO;YACL,aAAa;QACf;IACF,GAAG;QAAC;QAAO;KAAM;IAEjB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevindunbar/Desktop/Design%20Club/Clients/Flint/Lead%20Magnet/flint-prod/hooks/use-inline-edit.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react'\nimport { useDebounce } from './use-debounce'\n\nexport interface InlineEditOptions {\n  autoSave?: boolean\n  autoSaveDelay?: number\n  validation?: (value: string) => string | null\n  onSave?: (value: string) => Promise<void> | void\n  onCancel?: () => void\n  onEdit?: () => void\n  placeholder?: string\n  multiline?: boolean\n  maxLength?: number\n  required?: boolean\n}\n\nexport interface InlineEditReturn {\n  isEditing: boolean\n  value: string\n  displayValue: string\n  error: string | null\n  isSaving: boolean\n  isDirty: boolean\n  \n  // Actions\n  startEdit: () => void\n  save: () => Promise<void>\n  cancel: () => void\n  setValue: (value: string) => void\n  \n  // Keyboard handlers\n  handleKeyDown: (e: React.KeyboardEvent) => void\n  handleBlur: () => void\n  \n  // Ref for input element\n  inputRef: React.RefObject<HTMLInputElement | HTMLTextAreaElement | null>\n}\n\nexport function useInlineEdit(\n  initialValue: string,\n  options: InlineEditOptions = {}\n): InlineEditReturn {\n  const {\n    autoSave = true,\n    autoSaveDelay = 500,\n    validation,\n    onSave,\n    onCancel,\n    onEdit,\n    placeholder = '',\n    multiline = false,\n    maxLength,\n    required = false\n  } = options\n\n  const [isEditing, setIsEditing] = useState(false)\n  const [value, setValue] = useState(initialValue)\n  const [error, setError] = useState<string | null>(null)\n  const [isSaving, setIsSaving] = useState(false)\n  const [originalValue, setOriginalValue] = useState(initialValue)\n  \n  const inputRef = useRef<HTMLInputElement | HTMLTextAreaElement>(null)\n  \n  // Debounced value for auto-save\n  const debouncedValue = useDebounce(value, autoSaveDelay)\n  \n  // Track if the value has changed from original\n  const isDirty = value !== originalValue\n\n  // Update local state when initialValue changes (external updates)\n  useEffect(() => {\n    if (!isEditing && initialValue !== originalValue) {\n      setValue(initialValue)\n      setOriginalValue(initialValue)\n    }\n  }, [initialValue, isEditing, originalValue])\n\n  // Validate the current value\n  const validateValue = useCallback((val: string): string | null => {\n    if (required && !val.trim()) {\n      return 'This field is required'\n    }\n    if (maxLength && val.length > maxLength) {\n      return `Maximum length is ${maxLength} characters`\n    }\n    if (validation) {\n      return validation(val)\n    }\n    return null\n  }, [required, maxLength, validation])\n\n  // Auto-save when value changes (debounced)\n  useEffect(() => {\n    if (autoSave && isEditing && isDirty && !error) {\n      const validationError = validateValue(debouncedValue)\n      if (!validationError) {\n        save()\n      }\n    }\n  }, [debouncedValue, autoSave, isEditing, isDirty, error, validateValue])\n\n  // Validate on value change\n  useEffect(() => {\n    if (isEditing) {\n      const validationError = validateValue(value)\n      setError(validationError)\n    }\n  }, [value, isEditing, validateValue])\n\n  const startEdit = useCallback(() => {\n    setIsEditing(true)\n    setOriginalValue(value)\n    setError(null)\n    onEdit?.()\n    \n    // Focus input on next tick\n    setTimeout(() => {\n      inputRef.current?.focus()\n      if (inputRef.current) {\n        // Select all text for easy replacement\n        if ('select' in inputRef.current) {\n          inputRef.current.select()\n        }\n      }\n    }, 0)\n  }, [value, onEdit])\n\n  const save = useCallback(async () => {\n    if (error) return\n    \n    const validationError = validateValue(value)\n    if (validationError) {\n      setError(validationError)\n      return\n    }\n\n    try {\n      setIsSaving(true)\n      await onSave?.(value)\n      setOriginalValue(value)\n      setIsEditing(false)\n      setError(null)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to save')\n    } finally {\n      setIsSaving(false)\n    }\n  }, [value, error, validateValue, onSave])\n\n  const cancel = useCallback(() => {\n    setValue(originalValue)\n    setIsEditing(false)\n    setError(null)\n    onCancel?.()\n  }, [originalValue, onCancel])\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    switch (e.key) {\n      case 'Enter':\n        if (!multiline || (multiline && e.ctrlKey)) {\n          e.preventDefault()\n          save()\n        }\n        break\n      case 'Escape':\n        e.preventDefault()\n        cancel()\n        break\n      case 'Tab':\n        // Allow tabbing out, which should save\n        if (!error) {\n          save()\n        }\n        break\n    }\n  }, [save, cancel, multiline, error])\n\n  const handleBlur = useCallback(() => {\n    // Auto-save on blur if no errors\n    if (!error && isDirty) {\n      save()\n    } else if (!isDirty) {\n      setIsEditing(false)\n    }\n  }, [error, isDirty, save])\n\n  // Display value with fallback to placeholder\n  const displayValue = value || placeholder\n\n  return {\n    isEditing,\n    value,\n    displayValue,\n    error,\n    isSaving,\n    isDirty,\n    startEdit,\n    save,\n    cancel,\n    setValue,\n    handleKeyDown,\n    handleBlur,\n    inputRef\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevindunbar/Desktop/Design%20Club/Clients/Flint/Lead%20Magnet/flint-prod/hooks/use-capture-submission.ts"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { createLeadFromCapture } from '@/lib/data-access'\nimport type { DatabaseResult, Lead } from '@/lib/types/database'\n\nexport interface CaptureFormData {\n  name?: string\n  email?: string\n  phone?: string\n  gdprConsent?: boolean\n  marketingConsent?: boolean\n}\n\nexport interface CaptureSubmissionOptions {\n  campaignId: string\n  onSuccess?: (lead: Lead) => void\n  onError?: (error: string) => void\n}\n\nexport function useCaptureSubmission({ campaignId, onSuccess, onError }: CaptureSubmissionOptions) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [submitError, setSubmitError] = useState<string | null>(null)\n  const [isSubmitted, setIsSubmitted] = useState(false)\n\n  const submitCapture = async (data: CaptureFormData): Promise<boolean> => {\n    setIsSubmitting(true)\n    setSubmitError(null)\n\n    try {\n      // Gather browser metadata\n      const metadata = {\n        user_agent: window.navigator.userAgent,\n        referrer: document.referrer || undefined,\n        // Extract UTM parameters from URL\n        utm_source: new URLSearchParams(window.location.search).get('utm_source') || undefined,\n        utm_medium: new URLSearchParams(window.location.search).get('utm_medium') || undefined,\n        utm_campaign: new URLSearchParams(window.location.search).get('utm_campaign') || undefined,\n        utm_term: new URLSearchParams(window.location.search).get('utm_term') || undefined,\n        utm_content: new URLSearchParams(window.location.search).get('utm_content') || undefined,\n      }\n\n      const result: DatabaseResult<Lead> = await createLeadFromCapture(\n        campaignId,\n        data,\n        metadata\n      )\n\n      if (result.success && result.data) {\n        setIsSubmitted(true)\n        onSuccess?.(result.data)\n        return true\n      } else {\n        const errorMessage = result.error || 'Failed to submit form'\n        setSubmitError(errorMessage)\n        onError?.(errorMessage)\n        return false\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'An unexpected error occurred'\n      setSubmitError(errorMessage)\n      onError?.(errorMessage)\n      return false\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const resetSubmission = () => {\n    setIsSubmitted(false)\n    setSubmitError(null)\n  }\n\n  return {\n    submitCapture,\n    isSubmitting,\n    isSubmitted,\n    submitError,\n    resetSubmission\n  }\n} "],"names":[],"mappings":";;;AAEA;AACA;AAAA;AAHA;;;AAoBO,SAAS,qBAAqB,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAA4B;IAC/F,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,gBAAgB,OAAO;QAC3B,gBAAgB;QAChB,eAAe;QAEf,IAAI;YACF,0BAA0B;YAC1B,MAAM,WAAW;gBACf,YAAY,OAAO,SAAS,CAAC,SAAS;gBACtC,UAAU,SAAS,QAAQ,IAAI;gBAC/B,kCAAkC;gBAClC,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,iBAAiB;gBAC7E,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,iBAAiB;gBAC7E,cAAc,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,mBAAmB;gBACjF,UAAU,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,eAAe;gBACzE,aAAa,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,kBAAkB;YACjF;YAEA,MAAM,SAA+B,MAAM,CAAA,GAAA,8IAAA,CAAA,wBAAqB,AAAD,EAC7D,YACA,MACA;YAGF,IAAI,OAAO,OAAO,IAAI,OAAO,IAAI,EAAE;gBACjC,eAAe;gBACf,YAAY,OAAO,IAAI;gBACvB,OAAO;YACT,OAAO;gBACL,MAAM,eAAe,OAAO,KAAK,IAAI;gBACrC,eAAe;gBACf,UAAU;gBACV,OAAO;YACT;QACF,EAAE,OAAO,OAAO;YACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,eAAe;YACf,UAAU;YACV,OAAO;QACT,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,kBAAkB;QACtB,eAAe;QACf,eAAe;IACjB;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevindunbar/Desktop/Design%20Club/Clients/Flint/Lead%20Magnet/flint-prod/hooks/use-variable-access.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useMemo, useCallback } from 'react'\nimport { CampaignSection } from '@/lib/types/campaign-builder'\nimport { \n  extractAvailableVariablesForSection,\n  type VariableInfo,\n  type VariableExtractionOptions\n} from '@/lib/utils/variable-extractor'\n\n// =============================================================================\n// TYPE DEFINITIONS & EXPORTS\n// =============================================================================\n\nexport type { VariableInfo } from '@/lib/utils/variable-extractor'\n\nexport interface VariableAccessHookOptions {\n  includePreviewValues?: boolean\n  filterByType?: string[]\n  excludeSectionTypes?: string[]\n}\n\nexport interface VariableAccessState {\n  availableVariables: VariableInfo[]\n  variableMap: Map<string, VariableInfo>\n  isLoading: boolean\n  error?: string\n}\n\nexport interface VariableSuggestion {\n  variable: VariableInfo\n  matchScore: number\n  displayText: string\n}\n\n// =============================================================================\n// MAIN HOOK\n// =============================================================================\n\nexport function useVariableAccess(\n  sections: CampaignSection[],\n  currentSectionOrder: number,\n  options: VariableAccessHookOptions = {}\n) {\n  const [state, setState] = useState<VariableAccessState>({\n    availableVariables: [],\n    variableMap: new Map(),\n    isLoading: true,\n    error: undefined\n  })\n\n  // Extract variables when sections or options change\n  useEffect(() => {\n    setState(prev => ({ ...prev, isLoading: true, error: undefined }))\n\n    try {\n      const extractionOptions: VariableExtractionOptions = {\n        includePreviewValues: options.includePreviewValues,\n        filterByType: options.filterByType as any,\n        excludeSectionTypes: options.excludeSectionTypes\n      }\n\n      const variables = extractAvailableVariablesForSection(\n        sections,\n        currentSectionOrder,\n        extractionOptions\n      )\n\n      const variableMap = new Map<string, VariableInfo>()\n      variables.forEach(variable => {\n        variableMap.set(variable.name, variable)\n        variableMap.set(`@${variable.name}`, variable) // Also allow @-prefixed lookup\n      })\n\n      setState({\n        availableVariables: variables,\n        variableMap,\n        isLoading: false,\n        error: undefined\n      })\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        error: error instanceof Error ? error.message : 'Failed to extract variables'\n      }))\n    }\n  }, [sections, currentSectionOrder, options.includePreviewValues, options.filterByType, options.excludeSectionTypes])\n\n  // Memoized functions\n  const functions = useMemo(() => ({\n    /**\n     * Get variable by name (with or without @ prefix)\n     */\n    getVariable: (name: string): VariableInfo | undefined => {\n      return state.variableMap.get(name.startsWith('@') ? name : `@${name}`)\n    },\n\n    /**\n     * Check if a variable name exists\n     */\n    hasVariable: (name: string): boolean => {\n      return state.variableMap.has(name.startsWith('@') ? name : `@${name}`)\n    },\n\n    /**\n     * Get suggestions for @-mention autocomplete\n     */\n    getVariableSuggestions: (query: string): VariableSuggestion[] => {\n      if (!query || query.length < 1) {\n        // Return all variables if no query\n        return state.availableVariables.map(variable => ({\n          variable,\n          matchScore: 1,\n          displayText: `@${variable.name}`\n        }))\n      }\n\n      const normalizedQuery = query.toLowerCase().replace(/^@/, '')\n      \n      return state.availableVariables\n        .map(variable => {\n          const name = variable.name.toLowerCase()\n          const displayName = variable.displayName.toLowerCase()\n          \n          let matchScore = 0\n          \n          // Exact name match gets highest score\n          if (name === normalizedQuery) {\n            matchScore = 100\n          }\n          // Name starts with query gets high score\n          else if (name.startsWith(normalizedQuery)) {\n            matchScore = 80\n          }\n          // Display name starts with query gets medium score\n          else if (displayName.startsWith(normalizedQuery)) {\n            matchScore = 60\n          }\n          // Name contains query gets lower score\n          else if (name.includes(normalizedQuery)) {\n            matchScore = 40\n          }\n          // Display name contains query gets lowest score\n          else if (displayName.includes(normalizedQuery)) {\n            matchScore = 20\n          }\n          \n          return {\n            variable,\n            matchScore,\n            displayText: `@${variable.name}`\n          }\n        })\n        .filter(suggestion => suggestion.matchScore > 0)\n        .sort((a, b) => b.matchScore - a.matchScore)\n    },\n\n    /**\n     * Replace variable mentions in text with their values or placeholders\n     */\n    replaceVariableMentions: (\n      text: string, \n      values?: Map<string, string>,\n      placeholder = '{{VARIABLE}}'\n    ): string => {\n      return text.replace(/@(\\w+)/g, (match, variableName) => {\n        const variable = state.variableMap.get(`@${variableName}`)\n        if (!variable) return match // Keep original if variable not found\n        \n        // Use provided value, preview value, or placeholder\n        return values?.get(variableName) || \n               variable.previewValue || \n               placeholder.replace('{{VARIABLE}}', variableName)\n      })\n    },\n\n    /**\n     * Extract variable mentions from text\n     */\n    extractVariableMentions: (text: string): string[] => {\n      const mentions = text.match(/@(\\w+)/g) || []\n      return mentions\n        .map(mention => mention.substring(1)) // Remove @ prefix\n        .filter((name, index, array) => array.indexOf(name) === index) // Remove duplicates\n        .filter(name => state.variableMap.has(`@${name}`)) // Only valid variables\n    },\n\n    /**\n     * Validate that all variable mentions in text exist\n     */\n    validateVariableMentions: (text: string): { isValid: boolean; invalidVariables: string[] } => {\n      const mentions = text.match(/@(\\w+)/g) || []\n      const invalidVariables: string[] = []\n      \n      for (const mention of mentions) {\n        const variableName = mention.substring(1)\n        if (!state.variableMap.has(`@${variableName}`)) {\n          if (!invalidVariables.includes(variableName)) {\n            invalidVariables.push(variableName)\n          }\n        }\n      }\n      \n      return {\n        isValid: invalidVariables.length === 0,\n        invalidVariables\n      }\n    },\n\n    /**\n     * Get variables grouped by section\n     */\n    getVariablesBySection: (): Record<string, VariableInfo[]> => {\n      const grouped: Record<string, VariableInfo[]> = {}\n      \n      state.availableVariables.forEach(variable => {\n        const sectionTitle = variable.sectionTitle || 'Untitled Section'\n        if (!grouped[sectionTitle]) {\n          grouped[sectionTitle] = []\n        }\n        grouped[sectionTitle].push(variable)\n      })\n      \n      return grouped\n    }\n  }), [state.availableVariables, state.variableMap])\n\n  return {\n    ...state,\n    ...functions\n  }\n}\n\n// =============================================================================\n// VARIABLE MENTIONS FUNCTIONALITY\n// =============================================================================\n\nexport interface MentionState {\n  isShowingSuggestions: boolean\n  currentQuery: string\n  selectedIndex: number\n}\n\nexport interface VariableValidation {\n  isValid: boolean\n  invalidVariables: string[]\n  validVariables: string[]\n}\n\n/**\n * Hook for managing @ mentions in text editors\n */\nexport function useVariableMentions(\n  sections: CampaignSection[],\n  currentSectionOrder: number,\n  options: VariableAccessHookOptions = {}\n) {\n  const [mentionState, setMentionState] = useState<MentionState>({\n    isShowingSuggestions: false,\n    currentQuery: '',\n    selectedIndex: 0\n  })\n\n  // Get base variable access functionality\n  const variableAccess = useVariableAccess(sections, currentSectionOrder, options)\n\n  // =============================================================================\n  // MENTION MANAGEMENT\n  // =============================================================================\n\n  const handleMentionTrigger = useCallback((query: string) => {\n    setMentionState({\n      isShowingSuggestions: true,\n      currentQuery: query,\n      selectedIndex: 0\n    })\n  }, [])\n\n  const updateMentionQuery = useCallback((query: string) => {\n    setMentionState(prev => ({\n      ...prev,\n      currentQuery: query,\n      selectedIndex: 0\n    }))\n  }, [])\n\n  const hideMentionSuggestions = useCallback(() => {\n    setMentionState(prev => ({\n      ...prev,\n      isShowingSuggestions: false,\n      currentQuery: '',\n      selectedIndex: 0\n    }))\n  }, [])\n\n  const navigateMentionSuggestions = useCallback((direction: 'up' | 'down') => {\n    setMentionState(prev => {\n      const suggestions = variableAccess.getVariableSuggestions(prev.currentQuery)\n      const maxIndex = suggestions.length - 1\n      \n      let newIndex: number\n      if (direction === 'up') {\n        newIndex = prev.selectedIndex > 0 ? prev.selectedIndex - 1 : maxIndex\n      } else {\n        newIndex = prev.selectedIndex < maxIndex ? prev.selectedIndex + 1 : 0\n      }\n      \n      return {\n        ...prev,\n        selectedIndex: newIndex\n      }\n    })\n  }, [variableAccess])\n\n  const getSelectedSuggestion = useCallback((): VariableSuggestion | null => {\n    const suggestions = variableAccess.getVariableSuggestions(mentionState.currentQuery)\n    return suggestions[mentionState.selectedIndex] || null\n  }, [variableAccess, mentionState])\n\n  // =============================================================================\n  // VARIABLE PROCESSING\n  // =============================================================================\n\n  const extractVariableMentions = useCallback((text: string): string[] => {\n    const mentionRegex = /@([a-zA-Z_]\\w*)/g\n    const matches: string[] = []\n    let match\n\n    while ((match = mentionRegex.exec(text)) !== null) {\n      matches.push(match[1])\n    }\n\n    return matches\n  }, [])\n\n  const validateVariableMentions = useCallback((text: string): VariableValidation => {\n    const mentions = extractVariableMentions(text)\n    const availableVariableNames = variableAccess.availableVariables.map(v => v.name)\n    \n    const validVariables: string[] = []\n    const invalidVariables: string[] = []\n\n    mentions.forEach(mention => {\n      if (availableVariableNames.includes(mention)) {\n        validVariables.push(mention)\n      } else {\n        invalidVariables.push(mention)\n      }\n    })\n\n    return {\n      isValid: invalidVariables.length === 0,\n      invalidVariables,\n      validVariables\n    }\n  }, [variableAccess.availableVariables, extractVariableMentions])\n\n  const replaceVariableMentions = useCallback((\n    text: string,\n    variableValues?: Record<string, any>,\n    defaultValue: string = '[Variable]'\n  ): string => {\n    const availableVariablesMap = variableAccess.variableMap\n\n    return text.replace(/@([a-zA-Z_]\\w*)/g, (match, variableName) => {\n      const variable = availableVariablesMap.get(variableName)\n      \n      if (!variable) {\n        return match // Keep original if variable not found\n      }\n\n      // Use provided value, then preview value, then default\n      if (variableValues && variableValues[variableName] !== undefined) {\n        return String(variableValues[variableName])\n      }\n      \n      if (variable.previewValue) {\n        return variable.previewValue\n      }\n      \n      return defaultValue\n    })\n  }, [variableAccess.variableMap])\n\n  // =============================================================================\n  // RETURN COMBINED FUNCTIONALITY\n  // =============================================================================\n\n  return {\n    // Base variable access\n    ...variableAccess,\n    \n    // Mention-specific functionality\n    mentionState,\n    handleMentionTrigger,\n    updateMentionQuery,\n    hideMentionSuggestions,\n    navigateMentionSuggestions,\n    getSelectedSuggestion,\n    \n    // Variable processing\n    extractVariableMentions,\n    validateVariableMentions,\n    replaceVariableMentions\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevindunbar/Desktop/Design%20Club/Clients/Flint/Lead%20Magnet/flint-prod/contexts/capture-context.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, useEffect } from 'react'\n\ninterface CaptureState {\n  isCompleted: boolean\n  leadId?: string\n  campaignId?: string\n}\n\ninterface CaptureContextType {\n  captureState: CaptureState\n  markCaptureCompleted: (leadId: string) => void\n  resetCapture: () => void\n  isCaptureRequired: boolean\n  setCaptureRequired: (required: boolean) => void\n}\n\nconst CaptureContext = createContext<CaptureContextType | undefined>(undefined)\n\ninterface CaptureProviderProps {\n  children: React.ReactNode\n  campaignId?: string\n  persistToStorage?: boolean\n}\n\nexport function CaptureProvider({ \n  children, \n  campaignId,\n  persistToStorage = true \n}: CaptureProviderProps) {\n  const [captureState, setCaptureState] = useState<CaptureState>({\n    isCompleted: false,\n    leadId: undefined,\n    campaignId\n  })\n  \n  const [isCaptureRequired, setCaptureRequired] = useState(false)\n  \n  // Load state from localStorage on mount if persistence is enabled\n  useEffect(() => {\n    if (!persistToStorage || !campaignId) return\n    \n    const storageKey = `flint-capture-${campaignId}`\n    const savedState = localStorage.getItem(storageKey)\n    \n    if (savedState) {\n      try {\n        const parsed = JSON.parse(savedState)\n        setCaptureState(parsed)\n      } catch (error) {\n        console.warn('Failed to parse saved capture state:', error)\n      }\n    }\n  }, [campaignId, persistToStorage])\n  \n  // Save state to localStorage whenever it changes\n  useEffect(() => {\n    if (!persistToStorage || !campaignId) return\n    \n    const storageKey = `flint-capture-${campaignId}`\n    localStorage.setItem(storageKey, JSON.stringify(captureState))\n  }, [captureState, campaignId, persistToStorage])\n\n  const markCaptureCompleted = (leadId: string) => {\n    setCaptureState(prev => ({\n      ...prev,\n      isCompleted: true,\n      leadId\n    }))\n  }\n\n  const resetCapture = () => {\n    setCaptureState(prev => ({\n      ...prev,\n      isCompleted: false,\n      leadId: undefined\n    }))\n    \n    // Clear from localStorage if persistence is enabled\n    if (persistToStorage && campaignId) {\n      const storageKey = `flint-capture-${campaignId}`\n      localStorage.removeItem(storageKey)\n    }\n  }\n\n  const value: CaptureContextType = {\n    captureState,\n    markCaptureCompleted,\n    resetCapture,\n    isCaptureRequired,\n    setCaptureRequired\n  }\n\n  return (\n    <CaptureContext.Provider value={value}>\n      {children}\n    </CaptureContext.Provider>\n  )\n}\n\nexport function useCapture() {\n  const context = useContext(CaptureContext)\n  if (!context) {\n    throw new Error('useCapture must be used within a CaptureProvider')\n  }\n  return context\n}\n\n// Hook for checking if results should be gated\nexport function useResultsGating() {\n  const { captureState, isCaptureRequired } = useCapture()\n  \n  const isResultsLocked = isCaptureRequired && !captureState.isCompleted\n  const canAccessResults = !isCaptureRequired || captureState.isCompleted\n  \n  return {\n    isResultsLocked,\n    canAccessResults,\n    captureCompleted: captureState.isCompleted,\n    leadId: captureState.leadId\n  }\n} "],"names":[],"mappings":";;;;;;AAEA;AAFA;;;AAkBA,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAkC;AAQ9D,SAAS,gBAAgB,EAC9B,QAAQ,EACR,UAAU,EACV,mBAAmB,IAAI,EACF;IACrB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;QAC7D,aAAa;QACb,QAAQ;QACR;IACF;IAEA,MAAM,CAAC,mBAAmB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,kEAAkE;IAClE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,oBAAoB,CAAC,YAAY;QAEtC,MAAM,aAAa,CAAC,cAAc,EAAE,YAAY;QAChD,MAAM,aAAa,aAAa,OAAO,CAAC;QAExC,IAAI,YAAY;YACd,IAAI;gBACF,MAAM,SAAS,KAAK,KAAK,CAAC;gBAC1B,gBAAgB;YAClB,EAAE,OAAO,OAAO;gBACd,QAAQ,IAAI,CAAC,wCAAwC;YACvD;QACF;IACF,GAAG;QAAC;QAAY;KAAiB;IAEjC,iDAAiD;IACjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,oBAAoB,CAAC,YAAY;QAEtC,MAAM,aAAa,CAAC,cAAc,EAAE,YAAY;QAChD,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;IAClD,GAAG;QAAC;QAAc;QAAY;KAAiB;IAE/C,MAAM,uBAAuB,CAAC;QAC5B,gBAAgB,CAAA,OAAQ,CAAC;gBACvB,GAAG,IAAI;gBACP,aAAa;gBACb;YACF,CAAC;IACH;IAEA,MAAM,eAAe;QACnB,gBAAgB,CAAA,OAAQ,CAAC;gBACvB,GAAG,IAAI;gBACP,aAAa;gBACb,QAAQ;YACV,CAAC;QAED,oDAAoD;QACpD,IAAI,oBAAoB,YAAY;YAClC,MAAM,aAAa,CAAC,cAAc,EAAE,YAAY;YAChD,aAAa,UAAU,CAAC;QAC1B;IACF;IAEA,MAAM,QAA4B;QAChC;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,eAAe,QAAQ;QAAC,OAAO;kBAC7B;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAGO,SAAS;IACd,MAAM,EAAE,YAAY,EAAE,iBAAiB,EAAE,GAAG;IAE5C,MAAM,kBAAkB,qBAAqB,CAAC,aAAa,WAAW;IACtE,MAAM,mBAAmB,CAAC,qBAAqB,aAAa,WAAW;IAEvE,OAAO;QACL;QACA;QACA,kBAAkB,aAAa,WAAW;QAC1C,QAAQ,aAAa,MAAM;IAC7B;AACF","debugId":null}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevindunbar/Desktop/Design%20Club/Clients/Flint/Lead%20Magnet/flint-prod/app/dashboard/campaigns/%5Bid%5D/builder/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useParams, useRouter } from 'next/navigation'\nimport { useAuth } from '@/lib/auth-context'\nimport { getCampaignById, updateCampaign } from '@/lib/data-access'\nimport { Campaign } from '@/lib/types/database'\nimport { CampaignSection, SectionType, getSectionTypeById } from '@/lib/types/campaign-builder'\nimport { CampaignBuilderTopBar } from '@/components/campaign-builder/top-bar'\nimport { SectionsMenu } from '@/components/campaign-builder/sections-menu'\nimport { SortableCanvas } from '@/components/campaign-builder/sortable-canvas'\nimport { EnhancedSectionCard } from '@/components/campaign-builder/enhanced-section-card'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { PublishModal } from '@/components/campaign-builder/publish-modal'\nimport { toast } from '@/components/ui/use-toast'\nimport { Loader2, AlertCircle } from 'lucide-react'\nimport { \n  DndContext, \n  DragEndEvent, \n  DragOverlay, \n  DragStartEvent,\n  closestCenter,\n  PointerSensor,\n  useSensor,\n  useSensors\n} from '@dnd-kit/core'\nimport { \n  arrayMove\n} from '@dnd-kit/sortable'\nimport { DraggableSectionType } from '@/components/campaign-builder/draggable-section-type'\nimport { EnhancedSortableCanvas } from '@/components/campaign-builder/enhanced-sortable-canvas'\nimport { CampaignPreview } from '@/components/campaign-builder/campaign-preview'\nimport { cn } from '@/lib/utils'\n\nexport default function CampaignBuilderPage() {\n  const { user, loading } = useAuth()\n  const params = useParams()\n  const router = useRouter()\n  \n  // State\n  const [campaign, setCampaign] = useState<Campaign | null>(null)\n  const [sections, setSections] = useState<CampaignSection[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [isSaving, setIsSaving] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [activeDragItem, setActiveDragItem] = useState<SectionType | CampaignSection | null>(null)\n  const [activeTab, setActiveTab] = useState<'builder' | 'preview'>('builder')\n  const [showPublishModal, setShowPublishModal] = useState(false)\n\n  // DnD sensors\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 8,\n      },\n    })\n  )\n\n  // Load campaign data\n  useEffect(() => {\n    loadCampaign()\n  }, [])\n\n  const loadCampaign = async () => {\n    if (!params.id || typeof params.id !== 'string') {\n      setError('Invalid campaign ID')\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      setIsLoading(true)\n      setError(null)\n      \n      const result = await getCampaignById(params.id)\n      \n      if (!result.success || !result.data) {\n        throw new Error(result.error || 'Campaign not found')\n      }\n      \n      setCampaign(result.data)\n      // TODO: Load sections from database\n      // For now, using mock sections\n      setSections([])\n    } catch (err) {\n      console.error('Error loading campaign:', err)\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load campaign'\n      setError(errorMessage)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleCampaignNameChange = async (newName: string) => {\n    if (!campaign) return\n\n    try {\n      setIsSaving(true)\n      setError(null)\n\n      const result = await updateCampaign(campaign.id, { name: newName })\n      if (!result.success) {\n        throw new Error(result.error || 'Failed to update campaign name')\n      }\n\n      setCampaign(prev => prev ? { ...prev, name: newName } : null)\n      toast({\n        title: 'Campaign name updated',\n        description: 'Campaign name has been saved',\n        duration: 2000\n      })\n    } catch (err) {\n      console.error('Error updating campaign name:', err)\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update campaign name'\n      setError(errorMessage)\n      toast({\n        title: 'Update failed',\n        description: errorMessage,\n        variant: 'destructive'\n      })\n      throw err // Re-throw to let the inline editor handle it\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  const handleSave = async () => {\n    if (!campaign) return\n\n    try {\n      setIsSaving(true)\n      setError(null)\n      \n      // TODO: Save sections to database\n      // For now, just show success\n      \n      toast({\n        title: 'Campaign saved',\n        description: 'All changes have been saved successfully',\n        duration: 3000\n      })\n    } catch (err) {\n      console.error('Error saving campaign:', err)\n      const errorMessage = err instanceof Error ? err.message : 'Failed to save campaign'\n      setError(errorMessage)\n      toast({\n        title: 'Save failed',\n        description: errorMessage,\n        variant: 'destructive'\n      })\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  const handlePreview = () => {\n    if (!campaign) return\n    const previewUrl = `/campaigns/${campaign.id}/preview`\n    window.open(previewUrl, '_blank', 'noopener,noreferrer')\n  }\n\n  const handlePublish = () => {\n    setShowPublishModal(true)\n  }\n\n  const handlePublishSuccess = (updatedCampaign: Campaign) => {\n    setCampaign(updatedCampaign)\n    setShowPublishModal(false)\n  }\n\n  const handleSectionAdd = (sectionType: SectionType) => {\n    const newSection: CampaignSection = {\n      id: `section-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      type: sectionType.id,\n      title: sectionType.name,\n      settings: sectionType.defaultSettings || {},\n      order: sections.length + 1,\n      isVisible: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n\n    setSections(prev => [...prev, newSection])\n    toast({\n      title: 'Section added',\n      description: `${sectionType.name} section has been added to your campaign`\n    })\n  }\n\n  const handleSectionUpdate = async (sectionId: string, updates: Partial<CampaignSection>) => {\n    try {\n      // TODO: Update section in database\n      // For now, just update local state\n      setSections(prev => prev.map(section => \n        section.id === sectionId \n          ? { ...section, ...updates, updatedAt: new Date().toISOString() }\n          : section\n      ))\n      \n      // Show success feedback for title changes\n      if (updates.title) {\n        toast({\n          title: 'Section updated',\n          description: 'Section title has been updated',\n          duration: 2000\n        })\n      }\n    } catch (err) {\n      console.error('Error updating section:', err)\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update section'\n      toast({\n        title: 'Update failed',\n        description: errorMessage,\n        variant: 'destructive'\n      })\n      throw err // Re-throw to let the inline editor handle it\n    }\n  }\n\n  const handleSectionDelete = (sectionId: string) => {\n    setSections(prev => {\n      const filtered = prev.filter(section => section.id !== sectionId)\n      // Reorder remaining sections\n      const reordered = filtered.map((section, index) => ({\n        ...section,\n        order: index + 1,\n        updatedAt: new Date().toISOString()\n      }))\n      \n      toast({\n        title: 'Section deleted',\n        description: 'Section has been removed from your campaign'\n      })\n      \n      return reordered\n    })\n  }\n\n  const handleSectionDuplicate = (sectionId: string) => {\n    setSections(prev => {\n      const sectionToDuplicate = prev.find(section => section.id === sectionId)\n      if (!sectionToDuplicate) return prev\n\n      const duplicatedSection: CampaignSection = {\n        ...sectionToDuplicate,\n        id: `section-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        title: `${sectionToDuplicate.title} (Copy)`,\n        order: prev.length + 1,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      }\n\n      toast({\n        title: 'Section duplicated',\n        description: 'A copy of the section has been created'\n      })\n\n      return [...prev, duplicatedSection]\n    })\n  }\n\n  const handleSectionConfigure = (sectionId: string) => {\n    // TODO: Open section configuration modal/panel\n    console.log('Configure section:', sectionId)\n    toast({\n      title: 'Configuration',\n      description: 'Section configuration panel coming soon',\n      duration: 3000\n    })\n  }\n\n  const handleSectionTypeChange = async (sectionId: string, newType: string) => {\n    try {\n      // Find the section and update it with new type\n      const newSectionType = getSectionTypeById(newType)\n      const updates: Partial<CampaignSection> = {\n        type: newType,\n        settings: {\n          ...(sections.find(s => s.id === sectionId)?.settings || {}),\n          ...newSectionType?.defaultSettings\n        }\n      }\n      \n      await handleSectionUpdate(sectionId, updates)\n      \n      toast({\n        title: 'Section type changed',\n        description: `Section changed to ${newSectionType?.name || newType}`,\n        duration: 3000\n      })\n    } catch (err) {\n      console.error('Error changing section type:', err)\n      toast({\n        title: 'Failed to change type',\n        description: err instanceof Error ? err.message : 'Failed to change section type',\n        variant: 'destructive'\n      })\n    }\n  }\n\n  // Drag and drop handlers\n  const handleDragStart = (event: DragStartEvent) => {\n    const { active } = event\n    \n    if (active.data.current?.type === 'section-type') {\n      setActiveDragItem(active.data.current.sectionType)\n    } else if (active.data.current?.type === 'campaign-section') {\n      setActiveDragItem(active.data.current.section)\n    }\n  }\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event\n\n    setActiveDragItem(null)\n\n    if (!over) return\n\n    // Handle dropping section type onto canvas\n    if (\n      active.data.current?.type === 'section-type' &&\n      over.data.current?.type === 'canvas'\n    ) {\n      const sectionType = active.data.current.sectionType as SectionType\n      handleSectionAdd(sectionType)\n      return\n    }\n\n    // Handle reordering sections within canvas\n    if (\n      active.data.current?.type === 'campaign-section' &&\n      over.data.current?.type === 'campaign-section'\n    ) {\n      const activeId = active.id as string\n      const overId = over.id as string\n\n      if (activeId !== overId) {\n        setSections(items => {\n          const oldIndex = items.findIndex(item => item.id === activeId)\n          const newIndex = items.findIndex(item => item.id === overId)\n          \n          const reorderedItems = arrayMove(items, oldIndex, newIndex)\n          // Update order property for all affected sections\n          return reorderedItems.map((section, index) => ({\n            ...section,\n            order: index + 1,\n            updatedAt: new Date().toISOString()\n          }))\n        })\n        \n        toast({\n          title: 'Sections reordered',\n          description: 'Section order has been updated',\n          duration: 2000\n        })\n      }\n    }\n  }\n\n  if (loading || isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\n          <p className=\"text-gray-600\">Loading campaign builder...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!user) {\n    return null\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div className=\"px-4 py-6 sm:px-0\">\n            <Card className=\"border-red-200 bg-red-50\">\n              <CardContent className=\"pt-6\">\n                <div className=\"flex items-center space-x-3 text-red-800\">\n                  <AlertCircle className=\"h-5 w-5\" />\n                  <div>\n                    <p className=\"font-medium\">Error loading campaign</p>\n                    <p className=\"text-sm mt-1\">{error}</p>\n                    <button\n                      onClick={loadCampaign}\n                      className=\"mt-2 text-sm underline hover:no-underline\"\n                    >\n                      Try Again\n                    </button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!campaign) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div className=\"px-4 py-6 sm:px-0\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <p className=\"text-gray-600\">Campaign not found</p>\n                  <button\n                    onClick={() => router.push('/dashboard/campaigns')}\n                    className=\"mt-2 text-blue-600 underline hover:no-underline\"\n                  >\n                    Back to Campaigns\n                  </button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n    >\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Campaign Builder Top Bar */}\n        <CampaignBuilderTopBar\n          campaignName={campaign.name}\n          campaignStatus={campaign.status}\n          isPublished={campaign.status === 'published'}\n          isSaving={isSaving}\n          canPublish={true}\n          onCampaignNameChange={handleCampaignNameChange}\n          onSave={handleSave}\n          onPreview={handlePreview}\n          onPublish={handlePublish}\n        />\n\n        {/* Main Content Area */}\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div className=\"px-4 py-6 sm:px-0\">\n            {/* Error Display */}\n            {error && (\n              <Card className=\"mb-6 border-red-200 bg-red-50\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center space-x-3 text-red-800\">\n                    <AlertCircle className=\"h-5 w-5\" />\n                    <div>\n                      <p className=\"font-medium\">Error</p>\n                      <p className=\"text-sm mt-1\">{error}</p>\n                      <button\n                        onClick={() => setError(null)}\n                        className=\"mt-2 text-sm underline hover:no-underline\"\n                      >\n                        Dismiss\n                      </button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Campaign Builder Content */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 h-[calc(100vh-200px)]\">\n              {/* Sidebar - Sections Menu */}\n              <div className=\"lg:col-span-1\">\n                <Card className=\"h-full\">\n                  <SectionsMenu />\n                </Card>\n              </div>\n\n              {/* Main Content - Tabbed Interface */}\n              <div className=\"lg:col-span-3\">\n                <Card className=\"h-full\">\n                  {/* Tab Navigation */}\n                  <div className=\"border-b border-gray-200\">\n                    <nav className=\"flex space-x-8 px-6 pt-4\" aria-label=\"Tabs\">\n                      <button\n                        onClick={() => setActiveTab('builder')}\n                        className={cn(\n                          \"whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm transition-colors\",\n                          activeTab === 'builder'\n                            ? \"border-blue-500 text-blue-600\"\n                            : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                        )}\n                      >\n                        Builder\n                      </button>\n                      <button\n                        onClick={() => setActiveTab('preview')}\n                        className={cn(\n                          \"whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm transition-colors\",\n                          activeTab === 'preview'\n                            ? \"border-blue-500 text-blue-600\"\n                            : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                        )}\n                      >\n                        Preview\n                      </button>\n                    </nav>\n                  </div>\n\n                  {/* Tab Content */}\n                  {activeTab === 'builder' ? (\n                    <>\n                      <CardHeader>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <CardTitle className=\"text-lg\">Campaign Canvas</CardTitle>\n                            <CardDescription>\n                              Drag sections from the sidebar to build your campaign. Use the enhanced controls for inline editing, preview mode, and section management.\n                            </CardDescription>\n                          </div>\n                          {sections.length > 0 && (\n                            <div className=\"text-sm text-gray-500\">\n                              {sections.length} section{sections.length !== 1 ? 's' : ''} • {sections.filter(s => s.isVisible).length} visible\n                            </div>\n                          )}\n                        </div>\n                      </CardHeader>\n                      <CardContent className=\"h-[calc(100%-140px)]\">\n                        <EnhancedSortableCanvas\n                          sections={sections}\n                          onSectionUpdate={handleSectionUpdate}\n                          onSectionDelete={handleSectionDelete}\n                          onSectionDuplicate={handleSectionDuplicate}\n                          onSectionConfigure={handleSectionConfigure}\n                          onSectionTypeChange={handleSectionTypeChange}\n                          className=\"h-full\"\n                          showCollapsedSections={true}\n                        />\n                      </CardContent>\n                    </>\n                  ) : (\n                    <div className=\"h-[calc(100%-60px)]\">\n                      <CampaignPreview\n                        campaign={campaign}\n                        sections={sections}\n                        className=\"h-full\"\n                        enableDeviceToggle={true}\n                        enableFullscreen={true}\n                      />\n                    </div>\n                  )}\n                </Card>\n              </div>\n            </div>\n          </div>\n        </main>\n\n        {/* Drag Overlay */}\n        <DragOverlay>\n          {activeDragItem && (\n            <>\n              {/* Check if it's a SectionType (has 'name' property) */}\n              {('name' in activeDragItem && 'description' in activeDragItem) ? (\n                /* Section Type being dragged */\n                <DraggableSectionType\n                  sectionType={activeDragItem as SectionType}\n                  className=\"shadow-lg rotate-3 opacity-90\"\n                />\n              ) : (\n                /* Campaign Section being dragged */\n                <EnhancedSectionCard\n                  section={activeDragItem as CampaignSection}\n                  onUpdate={async () => {}}\n                  onDelete={() => {}}\n                  onDuplicate={() => {}}\n                  onConfigure={() => {}}\n                  className=\"shadow-lg rotate-2 opacity-90\"\n                />\n              )}\n            </>\n          )}\n        </DragOverlay>\n\n        {showPublishModal && (\n          <PublishModal\n            campaign={campaign}\n            isOpen={showPublishModal}\n            onClose={() => setShowPublishModal(false)}\n            onPublishSuccess={handlePublishSuccess}\n          />\n        )}\n      </div>\n    </DndContext>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}